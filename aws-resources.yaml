---
AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  pCreateBucket:
    Description: Create the bucket true/false [false]
    Type: String
    Default: 'false'
Conditions:
  CreateBucket: !Equals [!Ref pCreateBucket, 'true']
Resources:
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: blog-deploy
    DeletionPolicy: Retain
    Condition: CreateBucket
  DeploymentLambda:
    Type: AWS::Lambda::Function
    Properties:
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - DeploymentLambdaRole
          - Arn
      Runtime: nodejs10.x
      Timeout: 600
      Code:
        S3Bucket: blog-deploy
        S3Key: deployment.zip
  DeploymentLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: ''
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: LambdaDeployS3
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Resource: arn:aws:s3:::emil.lerch.org/*
                Action:
                  - s3:*
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*
